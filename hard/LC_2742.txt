//2742. Painting the Walls
2 - D solution by Karan kumar.

time : O(N*N);
space : O(N*N);

//CODE

class Solution {
public:
    int paintWalls(vector<int>& cost, vector<int>& time) {
        int n = cost.size();
        int dp[501][501];
        for(int i = 0; i <= n; i++)
            dp[0][i] = 1e9;
        
        dp[0][0] = 0;

        for(int i = 1; i <= n; i++)
            for(int j = 0; j <= n; j++)
                dp[i][j] = min(dp[i - 1][j], cost[i - 1] + dp[i - 1][max(0, j - 1 - time[i - 1])]);
        return dp[n][n];
    }
};

//1 - D Solution by Karan Problem No. 2742

//time : O(N * N)
//space : O(2 * N)


class Solution {
public:
    int paintWalls(vector<int>& cost, vector<int>& time) {
        int n = cost.size();
        int dp[501];
        for(int i = 0; i <= n; i++)
            dp[i] = 1e9;

        dp[0] = 0;        
        for(int i = 1; i <= n; i++)
        {
            int arr[501];
            for(int j = 0; j <= n; j++)
                arr[j] = min(dp[j], cost[i - 1] + dp[max(0, j - 1 - time[i - 1])]);
            swap(arr, dp);
        }
        return dp[n];
    }
};



