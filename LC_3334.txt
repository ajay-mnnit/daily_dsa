// Problem: https://leetcode.com/problems/find-the-maximum-factor-score-of-array/description/

//-------------------------------------------------------------------------------------------------------------
//APPROACH 1: brute force, Vikram
// Time: O(n)
// Space: O(1)

class Solution {
    //gcda is gcd
    long long gcda(long long a, long long b){
        if(a<=0 ) return b;
        if(b<=0) return a;
        return gcda(b%a, a);
    }
    //lcma is lcm
    // long long lcma(int a, int b){
    //     long long ans;
    //     for(int i=a; i<=a*b; i++){
    //         if(i%a == 0 && i%b == 0){
    //             ans = i;
    //             break;
    //         }
    //     }
    //     return ans;
    // }
    //another method for lcm
    long long lcma(long long a, long long  b){
        return ((long long)(a)/gcda(a, b))*b;
    }

public:
    long long maxScore(vector<int>& nums) {
        long long ans=0;
        int n = nums.size();
        if(n == 1){
            ans = nums[0]*nums[0];
        }
        else{
            long long fc = nums[0],llcm = nums[0];
            for(int i=1; i<n; i++){
                fc = gcda(fc, nums[i]);
            }

            for(int i=1; i<n; i++){
                llcm = lcma(llcm, nums[i]);
            }
            ans = llcm*fc;
            for(int i=0; i<n; i++){
                if(i==0){
                    fc = nums[1];
                    llcm = nums[1];
                }
                else{
                    fc = nums[0];
                    llcm = nums[0];
                }
                for(int j=0; j<n; j++){
                    if(j!=i){
                        fc = gcda(fc, nums[j]);
                        llcm = lcma(llcm, nums[j]);
                    }
                }
                ans = max(ans, 1LL*fc*llcm);
            }
        }
        return ans;
    }
};